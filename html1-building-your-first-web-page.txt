https://learn.shayhowe.com/html-css/building-your-first-web-page/

HTML, HyperText Markup Language, gives content structure and meaning by defining that content as, for example, headings, paragraphs, or images.
CSS, or Cascading Style Sheets, is a presentation language created to style the appearance of content—using, for example, fonts or colors.
As a rule, HTML will always represent content, and CSS will always represent the appearance of that content.
CSS should not be written inside of an HTML document and vice versa.

Common HTML Terms:
http://www.scriptingmaster.com/html/HTML-terms-glossary.asp

Terms you should be most familiar with:
*Elements - Elements are designators that define the structure and content of objects within a page.
Elements are identified by the use of less-than and greater-than angle brackets, < >, surrounding the element name.
>Headings <h1> - <h6>
>Paragraphs <p>

*Tags
The use of less-than and greater-than angle brackets surrounding an element creates what is known as a tag. 
Tags most commonly occur in pairs of opening and closing tags.
The content that falls between the opening and closing tags is the content of that element. 

*Attributes
Attributes are properties used to provide additional information about an element.
The most common attributes include:
>id attribute, which identifies an element; 
>class attribute, which classifies an element; 
>src attribute, which specifies a source for embeddable content;
>href attribute, which provides a hyperlink reference to a linked resource.
Generally attributes include a name and a value. The format for these attributes consists of the attribute name followed by an equals sign and then a quoted attribute value.
> <a href="http://shayhowe.com/">Shay Howe</a>

HTML documents are plain text documents saved with an .html file extension

All HTML documents have a required structure that includes the following declaration and elements: <!DOCTYPE html>, <html>, <head>, and <body>.

The document type declaration, or <!DOCTYPE html>, informs web browsers which version of HTML is being used and is placed at the very beginning of the HTML document.

the <html> element signifies the beginning of the document.

the <head> element identifies the top of the document, including any metadata (accompanying information about the page).

All of the visible content within the web page will fall within the <body> element.

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Hello World</title>
  </head>
  <body>
    <h1>Hello World</h1>
    <p>This is a web page.</p>
  </body>
</html>

When an element is placed inside of another element, also known as nested, it is a good idea to indent that element to keep the document structure well organized and legible.

In the previous example, the <meta> element had only one tag and didn’t include a closing tag. Other common selfclosing elements include:
<br><embed><hr><img><input><link><meta><param><source><wbr>

Common CSS terms
https://www.impressivewebs.com/css-terms-definitions/
>selectors, properties, and values

As elements are added to a web page, they may be styled using CSS.
Selectors - A selector designates exactly which element or elements within our HTML to target and apply styles (such as color, size, and position) to.
Selectors generally target an attribute value, such as an id or class value, or target the type of element, such as <h1> or <p>.
Within CSS, selectors are followed with curly brackets, {}, which encompass the styles to be applied to the selected element. 
The selector here is targeting all <p> elements: 
p{...}

Properties - Once an element is selected, a property determines the styles that will be applied to that element. 
Property names fall after a selector, within the curly brackets, {}, and immediately preceding a colon, :.
In the following code, we are defining the color and font-size properties to be applied to all <p> elements.
p {
  color: ...;
  font-size: ...;
}

Values - Now we can determine the behavior of that property with a value.
Values can be identified as the text between the colon, :, and semicolon, ;. 
p {
  color: orange;
  font-size: 16px;
}

It is a common practice to indent property and value pairs within the curly brackets. As with HTML, these indentations help keep our code organized and legible.

The first step is to become familiar with the different types of selectors. We’ll start with the most common selectors: type, class, and ID selectors.
Type Selectors - Type selectors target elements by their element type. 
CSS:
div { ... }
HTML:
<div>...</div>

Class Selectors - Class selectors allow us to select an element based on the element’s class attribute value.
Class selectors are a little more specific than type selectors, as they select a particular group of elements rather than all elements of one type.
Class selectors allow us to apply the same styles to different elements at once by using the same class attribute value across multiple elements.
Within CSS, classes are denoted by a leading period, ., followed by the class attribute value. 
CSS:
.awesome { ... }
HTML:
<div class="awesome">...</div>
<p class="awesome">...</p>

ID Selectors - ID selectors are even more precise than class selectors, as they target only one unique element at a time.
Regardless of which type of element they appear on, id attribute values can only be used once per page. If used they should be reserved for significant elements.
Within CSS, ID selectors are denoted by a leading hash sign, #, followed by the id attribute value. 
CSS:
#shawn { ... }
HTML:
<div id="shawn">...</div>

https://learn.shayhowe.com/advanced-html-css/complex-selectors/


Referencing CSS
The best practice for referencing our CSS is to include all of our styles in a single external style sheet, which is referenced from within the <head> element of our HTML document.
Using a single external style sheet allows us to use the same styles across an entire website and quickly make changes sitewide.
To create our external CSS style sheet, we’ll want to use our text editor of choice again to create a new plain text file with a .css file extension. Our CSS file should be saved within the same folder, or a subfolder, where our HTML file is located.
Within the <head> element of the HTML document, the <link> element is used to define the relationship between the HTML file and the CSS file. 
Because we are linking to CSS, we use the rel attribute with a value of stylesheet to specify their relationship. Furthermore, the href (or hyperlink reference) attribute is used to identify the location, or path, of the CSS file.
<head>
  <link rel="stylesheet" href="main.css">
</head>
In order for the CSS to render correctly, the path of the href attribute value must directly correlate to where our CSS file is saved. In the preceding example, the main.css file is stored within the same location as the HTML file, also known as the root directory.

CSS cascades from top to bottom

CSS resets take every common HTML element with a predefined style and provide one unified style for all browsers. 
One of the most popular resets is Eric Meyer’s reset:
https://meyerweb.com/eric/tools/css/reset/
http://www.blueprintcss.org/











